name: CI

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    env:
      MIX_ENV: dev
    name: Lint
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        elixir: ["1.17"]
        otp: ["27"]
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
      - uses: actions/cache@v3
        with:
          path: deps
          key: ${{ matrix.os }}-otp_${{ matrix.otp }}-elixir_${{ matrix.elixir }}-mix_${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ matrix.os }}-otp_${{ matrix.otp }}-elixir_${{ matrix.elixir }}-mix_
      - run: mix deps.get
      - run: mix deps.compile
      - run: mix format --check-formatted
      - run: clang-format --dry-run --Werror c_src/sqlite3_nif.c
      - run: mix deps.unlock --check-unused
      - run: mix credo --all
      - run: mix test_sqlite_version

  test:
    runs-on: ${{ matrix.os }}
    env:
      MIX_ENV: test
      DEBUG: "1"

    name: Test Elixir ${{ matrix.elixir }}, OTP ${{ matrix.otp }}, OS ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-2019"]
        elixir: ["1.17", "1.16", "1.15"]
        otp: ["27", "26", "25"]
        exclude:
          - elixir: "1.15"
            otp: "27"
          - elixir: "1.16"
            otp: "27"
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
      - uses: egor-tensin/vs-shell@v2
        if: runner.os == 'Windows'
      - uses: actions/cache@v3
        with:
          path: deps
          key: ${{ matrix.os }}-otp_${{ matrix.otp }}-elixir_${{ matrix.elixir }}-mix_${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ matrix.os }}-otp_${{ matrix.otp }}-elixir_${{ matrix.elixir }}-mix_
      - run: mix deps.get --only test
      - run: mix deps.compile
      - run: mix compile
      - run: mix test
